// Code generated by MockGen. DO NOT EDIT.
// Source: threat_control_dao.go

// Package dao is a generated GoMock package.
package dao

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/jtyers/tmaas-model"
)

// MockThreatControlDao is a mock of ThreatControlDao interface.
type MockThreatControlDao struct {
	ctrl     *gomock.Controller
	recorder *MockThreatControlDaoMockRecorder
}

// MockThreatControlDaoMockRecorder is the mock recorder for MockThreatControlDao.
type MockThreatControlDaoMockRecorder struct {
	mock *MockThreatControlDao
}

// NewMockThreatControlDao creates a new mock instance.
func NewMockThreatControlDao(ctrl *gomock.Controller) *MockThreatControlDao {
	mock := &MockThreatControlDao{ctrl: ctrl}
	mock.recorder = &MockThreatControlDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockThreatControlDao) EXPECT() *MockThreatControlDaoMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockThreatControlDao) Create(ctx context.Context, data *model.ThreatControl) (*model.ThreatControl, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, data)
	ret0, _ := ret[0].(*model.ThreatControl)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockThreatControlDaoMockRecorder) Create(ctx, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockThreatControlDao)(nil).Create), ctx, data)
}

// Delete mocks base method.
func (m *MockThreatControlDao) Delete(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockThreatControlDaoMockRecorder) Delete(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockThreatControlDao)(nil).Delete), ctx, id)
}

// DeleteWhere mocks base method.
func (m *MockThreatControlDao) DeleteWhere(ctx context.Context, query *model.ThreatControl) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteWhere", ctx, query)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteWhere indicates an expected call of DeleteWhere.
func (mr *MockThreatControlDaoMockRecorder) DeleteWhere(ctx, query interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteWhere", reflect.TypeOf((*MockThreatControlDao)(nil).DeleteWhere), ctx, query)
}

// Get mocks base method.
func (m *MockThreatControlDao) Get(ctx context.Context, id string) (*model.ThreatControl, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, id)
	ret0, _ := ret[0].(*model.ThreatControl)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockThreatControlDaoMockRecorder) Get(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockThreatControlDao)(nil).Get), ctx, id)
}

// GetAll mocks base method.
func (m *MockThreatControlDao) GetAll(ctx context.Context) ([]*model.ThreatControl, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", ctx)
	ret0, _ := ret[0].([]*model.ThreatControl)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockThreatControlDaoMockRecorder) GetAll(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockThreatControlDao)(nil).GetAll), ctx)
}

// QueryExact mocks base method.
func (m *MockThreatControlDao) QueryExact(ctx context.Context, query *model.ThreatControl) ([]*model.ThreatControl, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "QueryExact", ctx, query)
	ret0, _ := ret[0].([]*model.ThreatControl)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// QueryExact indicates an expected call of QueryExact.
func (mr *MockThreatControlDaoMockRecorder) QueryExact(ctx, query interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "QueryExact", reflect.TypeOf((*MockThreatControlDao)(nil).QueryExact), ctx, query)
}

// QueryExactSingle mocks base method.
func (m *MockThreatControlDao) QueryExactSingle(ctx context.Context, query *model.ThreatControl) (*model.ThreatControl, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "QueryExactSingle", ctx, query)
	ret0, _ := ret[0].(*model.ThreatControl)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// QueryExactSingle indicates an expected call of QueryExactSingle.
func (mr *MockThreatControlDaoMockRecorder) QueryExactSingle(ctx, query interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "QueryExactSingle", reflect.TypeOf((*MockThreatControlDao)(nil).QueryExactSingle), ctx, query)
}

// UpdateWhereExact mocks base method.
func (m *MockThreatControlDao) UpdateWhereExact(ctx context.Context, queryExact, data *model.ThreatControl) ([]*model.ThreatControl, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateWhereExact", ctx, queryExact, data)
	ret0, _ := ret[0].([]*model.ThreatControl)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateWhereExact indicates an expected call of UpdateWhereExact.
func (mr *MockThreatControlDaoMockRecorder) UpdateWhereExact(ctx, queryExact, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateWhereExact", reflect.TypeOf((*MockThreatControlDao)(nil).UpdateWhereExact), ctx, queryExact, data)
}

// UpdateWhereExactSingle mocks base method.
func (m *MockThreatControlDao) UpdateWhereExactSingle(ctx context.Context, queryExact, data *model.ThreatControl) (*model.ThreatControl, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateWhereExactSingle", ctx, queryExact, data)
	ret0, _ := ret[0].(*model.ThreatControl)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateWhereExactSingle indicates an expected call of UpdateWhereExactSingle.
func (mr *MockThreatControlDaoMockRecorder) UpdateWhereExactSingle(ctx, queryExact, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateWhereExactSingle", reflect.TypeOf((*MockThreatControlDao)(nil).UpdateWhereExactSingle), ctx, queryExact, data)
}
