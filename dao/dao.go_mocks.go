// Code generated by MockGen. DO NOT EDIT.
// Source: dao.go

// Package dao is a generated GoMock package.
package dao

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/jtyers/tmaas-model"
)

// MockThreatModelDao is a mock of ThreatModelDao interface.
type MockThreatModelDao struct {
	ctrl     *gomock.Controller
	recorder *MockThreatModelDaoMockRecorder
}

// MockThreatModelDaoMockRecorder is the mock recorder for MockThreatModelDao.
type MockThreatModelDaoMockRecorder struct {
	mock *MockThreatModelDao
}

// NewMockThreatModelDao creates a new mock instance.
func NewMockThreatModelDao(ctrl *gomock.Controller) *MockThreatModelDao {
	mock := &MockThreatModelDao{ctrl: ctrl}
	mock.recorder = &MockThreatModelDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockThreatModelDao) EXPECT() *MockThreatModelDaoMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockThreatModelDao) Create(ctx context.Context, params model.ThreatModelParams) (*model.ThreatModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, params)
	ret0, _ := ret[0].(*model.ThreatModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockThreatModelDaoMockRecorder) Create(ctx, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockThreatModelDao)(nil).Create), ctx, params)
}

// Delete mocks base method.
func (m *MockThreatModelDao) Delete(ctx context.Context, id model.ThreatModelID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockThreatModelDaoMockRecorder) Delete(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockThreatModelDao)(nil).Delete), ctx, id)
}

// DeleteWhere mocks base method.
func (m *MockThreatModelDao) DeleteWhere(ctx context.Context, query *model.ThreatModelQuery) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteWhere", ctx, query)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteWhere indicates an expected call of DeleteWhere.
func (mr *MockThreatModelDaoMockRecorder) DeleteWhere(ctx, query interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteWhere", reflect.TypeOf((*MockThreatModelDao)(nil).DeleteWhere), ctx, query)
}

// Get mocks base method.
func (m *MockThreatModelDao) Get(ctx context.Context, id model.ThreatModelID) (*model.ThreatModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, id)
	ret0, _ := ret[0].(*model.ThreatModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockThreatModelDaoMockRecorder) Get(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockThreatModelDao)(nil).Get), ctx, id)
}

// GetAll mocks base method.
func (m *MockThreatModelDao) GetAll(ctx context.Context) ([]*model.ThreatModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", ctx)
	ret0, _ := ret[0].([]*model.ThreatModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockThreatModelDaoMockRecorder) GetAll(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockThreatModelDao)(nil).GetAll), ctx)
}

// QueryExact mocks base method.
func (m *MockThreatModelDao) QueryExact(ctx context.Context, query *model.ThreatModelQuery) ([]*model.ThreatModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "QueryExact", ctx, query)
	ret0, _ := ret[0].([]*model.ThreatModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// QueryExact indicates an expected call of QueryExact.
func (mr *MockThreatModelDaoMockRecorder) QueryExact(ctx, query interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "QueryExact", reflect.TypeOf((*MockThreatModelDao)(nil).QueryExact), ctx, query)
}

// QueryExactSingle mocks base method.
func (m *MockThreatModelDao) QueryExactSingle(ctx context.Context, query *model.ThreatModelQuery) (*model.ThreatModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "QueryExactSingle", ctx, query)
	ret0, _ := ret[0].(*model.ThreatModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// QueryExactSingle indicates an expected call of QueryExactSingle.
func (mr *MockThreatModelDaoMockRecorder) QueryExactSingle(ctx, query interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "QueryExactSingle", reflect.TypeOf((*MockThreatModelDao)(nil).QueryExactSingle), ctx, query)
}

// Update mocks base method.
func (m *MockThreatModelDao) Update(ctx context.Context, id model.ThreatModelID, params model.ThreatModelParams) (*model.ThreatModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, id, params)
	ret0, _ := ret[0].(*model.ThreatModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockThreatModelDaoMockRecorder) Update(ctx, id, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockThreatModelDao)(nil).Update), ctx, id, params)
}

// UpdateWhereExact mocks base method.
func (m *MockThreatModelDao) UpdateWhereExact(ctx context.Context, queryExact *model.ThreatModelQuery, params model.ThreatModelParams) ([]*model.ThreatModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateWhereExact", ctx, queryExact, params)
	ret0, _ := ret[0].([]*model.ThreatModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateWhereExact indicates an expected call of UpdateWhereExact.
func (mr *MockThreatModelDaoMockRecorder) UpdateWhereExact(ctx, queryExact, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateWhereExact", reflect.TypeOf((*MockThreatModelDao)(nil).UpdateWhereExact), ctx, queryExact, params)
}

// UpdateWhereExactSingle mocks base method.
func (m *MockThreatModelDao) UpdateWhereExactSingle(ctx context.Context, queryExact *model.ThreatModelQuery, params model.ThreatModelParams) (*model.ThreatModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateWhereExactSingle", ctx, queryExact, params)
	ret0, _ := ret[0].(*model.ThreatModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateWhereExactSingle indicates an expected call of UpdateWhereExactSingle.
func (mr *MockThreatModelDaoMockRecorder) UpdateWhereExactSingle(ctx, queryExact, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateWhereExactSingle", reflect.TypeOf((*MockThreatModelDao)(nil).UpdateWhereExactSingle), ctx, queryExact, params)
}
