// Code generated by MockGen. DO NOT EDIT.
// Source: threat_control_service.go

// Package service is a generated GoMock package.
package service

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/jtyers/tmaas-model"
)

// MockThreatControlService is a mock of ThreatControlService interface.
type MockThreatControlService struct {
	ctrl     *gomock.Controller
	recorder *MockThreatControlServiceMockRecorder
}

// MockThreatControlServiceMockRecorder is the mock recorder for MockThreatControlService.
type MockThreatControlServiceMockRecorder struct {
	mock *MockThreatControlService
}

// NewMockThreatControlService creates a new mock instance.
func NewMockThreatControlService(ctrl *gomock.Controller) *MockThreatControlService {
	mock := &MockThreatControlService{ctrl: ctrl}
	mock.recorder = &MockThreatControlServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockThreatControlService) EXPECT() *MockThreatControlServiceMockRecorder {
	return m.recorder
}

// CreateThreatControl mocks base method.
func (m *MockThreatControlService) CreateThreatControl(ctx context.Context, threatControl model.ThreatControl) (*model.ThreatControl, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateThreatControl", ctx, threatControl)
	ret0, _ := ret[0].(*model.ThreatControl)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateThreatControl indicates an expected call of CreateThreatControl.
func (mr *MockThreatControlServiceMockRecorder) CreateThreatControl(ctx, threatControl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateThreatControl", reflect.TypeOf((*MockThreatControlService)(nil).CreateThreatControl), ctx, threatControl)
}

// GetThreatControl mocks base method.
func (m *MockThreatControlService) GetThreatControl(ctx context.Context, id model.ThreatControlID) (*model.ThreatControl, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetThreatControl", ctx, id)
	ret0, _ := ret[0].(*model.ThreatControl)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetThreatControl indicates an expected call of GetThreatControl.
func (mr *MockThreatControlServiceMockRecorder) GetThreatControl(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetThreatControl", reflect.TypeOf((*MockThreatControlService)(nil).GetThreatControl), ctx, id)
}

// GetThreatControls mocks base method.
func (m *MockThreatControlService) GetThreatControls(ctx context.Context) ([]*model.ThreatControl, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetThreatControls", ctx)
	ret0, _ := ret[0].([]*model.ThreatControl)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetThreatControls indicates an expected call of GetThreatControls.
func (mr *MockThreatControlServiceMockRecorder) GetThreatControls(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetThreatControls", reflect.TypeOf((*MockThreatControlService)(nil).GetThreatControls), ctx)
}

// UpdateThreatControl mocks base method.
func (m *MockThreatControlService) UpdateThreatControl(ctx context.Context, threatControlID model.ThreatControlID, threatControl model.ThreatControl) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateThreatControl", ctx, threatControlID, threatControl)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateThreatControl indicates an expected call of UpdateThreatControl.
func (mr *MockThreatControlServiceMockRecorder) UpdateThreatControl(ctx, threatControlID, threatControl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateThreatControl", reflect.TypeOf((*MockThreatControlService)(nil).UpdateThreatControl), ctx, threatControlID, threatControl)
}
